{
  "permissions": {
    "allow": [
      "WebSearch",
      "Bash(dir:*)",
      "Bash(msbuild:*)",
      "Bash(where devenv)",
      "Bash(where \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\Common7\\IDE\\devenv.exe\")",
      "Bash(where \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\devenv.exe\")",
      "WebFetch(domain:discuss.px4.io)",
      "WebFetch(domain:docs.px4.io)",
      "WebFetch(domain:github.com)",
      "Bash(find:*)",
      "Bash(where msbuild)",
      "Bash(\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe\" \"C:\\Users\\p30pl\\source\\repos\\px4xplane\\px4-xplane.vcxproj\" /p:Configuration=Release /p:Platform=x64 /t:Clean,Build /v:minimal)",
      "Bash(\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe\" \"C:\\Users\\p30pl\\source\\repos\\px4xplane\\px4-xplane.vcxproj\" /p:Configuration=Release /p:Platform=x64 /t:Build /v:m)",
      "Bash(\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe\" px4-xplane.vcxproj -p:Configuration=Release -p:Platform=x64 -v:m)",
      "Bash(cmd /c dir:*)",
      "Bash(git add:*)",
      "Bash(git rm:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Read(//c/**)",
      "WebFetch(domain:developer.x-plane.com)",
      "Bash(wsl find:*)",
      "Bash(\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe\" \"C:\\Users\\p30pl\\source\\repos\\px4xplane\\px4-xplane.vcxproj\" -p:Configuration=Release -p:Platform=x64 -v:m)",
      "Read(//e/X-Plane 12/**)",
      "Bash(wsl grep -E \"HIL_SENSOR|ACC\\[|GYRO\\[|BARO:\" \"//e/X-Plane 12/Log.txt\")",
      "Bash(wsl grep \"HIL_SENSOR\" \"//e/X-Plane 12/Log.txt\")",
      "Bash(wsl grep \"px4xplane: \\[HIL_SENSOR\" \"/mnt/e/X-Plane 12/Log.txt\")",
      "Bash(cmd:*)",
      "Bash(awk:*)",
      "Bash(python:*)",
      "Bash(wsl wc:*)",
      "Bash(wsl awk:*)",
      "Bash(wsl head:*)",
      "Bash(\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe\" \"C:\\Users\\p30pl\\source\\repos\\px4xplane\\px4-xplane.vcxproj\" -p:Configuration=Release -p:Platform=x64 -t:Clean,Build -v:m)",
      "Bash(\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\Bin\\amd64\\MSBuild.exe\" \"C:\\Users\\p30pl\\source\\repos\\px4xplane\\px4-xplane.vcxproj\" -p:Configuration=Release -p:Platform=x64 -t:Build -v:m)",
      "Bash(wsl grep \"^param set-default\" \"//c/Users/p30pl/source/repos/px4xplane/config/px4_params/5020_xplane_alia250\")",
      "Bash(wsl grep -E \"HEIGHT|height|BARO|estimator|EKF|reset\" \"/mnt/e/X-Plane 12/Log.txt\")",
      "Bash(wsl tail -200)",
      "Bash(wsl grep -i \"height\\|baro\\|estimator\\|ekf\\|reset\" \"/mnt/e/X-Plane 12/Log.txt\")",
      "Bash(wsl tail -300)",
      "Bash(wsl ls -la \"/mnt/e/X-Plane 12/Log.txt\")",
      "Bash(wsl grep -n \"std::normal_distribution\" \"/mnt/c/Users/p30pl/source/repos/px4xplane/src/MAVLinkManager.cpp\")",
      "Bash(findstr /C:\"px4xplane\")",
      "Bash(findstr /C:\"error\" /C:\"ConnectionStatusHUD\")",
      "Bash(findstr /I /C:\"error\" /C:\"succeeded\" /C:\"failed\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nRelease v2.5.1: Height stability fix and connection UX improvements\n\n## Critical Fixes\n\n### Height Estimate Stability\n- Fixed altitude drift and EKF2 reset issues affecting flight stability\n- Reduced GPS altitude noise from Ïƒ=0.5m to Ïƒ=0.15m (3.3Ã— improvement)\n- Eliminated Â±1m GPS jumps that caused false climb/descent detections\n- Updated EKF2_GPS_P_NOISE from 0.01 to 0.15 across all aircraft configs\n- Height estimate now stable with barometer (Â±3mm) properly prioritized over GPS (Â±30cm)\n\n### PX4 Parameter Compatibility\n- Removed non-existent parameters causing startup errors in Alia250 config\n- Cleaned up: VT_F_TRANS_RAMP, VT_DWN_PITCH_MAX, FW_T_SPD_OMEGA, FW_T_I_GAIN_THR\n- Added explanatory comments for each removed parameter\n\n## New Features\n\n### Connection Status HUD\n- Professional on-screen feedback for SITL connection attempts\n- Real-time progress indicator with 30-second timeout\n- Visual states: WAITING (yellow), CONNECTED (green), TIMEOUT (red), ERROR (orange)\n- Auto-fade success notification after 3 seconds\n- Top-center positioning following X-Plane UI standards\n- Configurable via show_connection_status_hud in config.ini\n\n## Performance\n\n### Production Optimization\n- Debug logging disabled by default for better performance\n- Reduces X-Plane Log.txt file size\n- Can be re-enabled for development/tuning via config.ini\n\n## Documentation\n\n- Added comprehensive CHANGELOG.md\n- Updated README.md with v2.5.1 release notes\n- Documented all parameter changes with technical explanations\n\n## Technical Details\n\nFiles Modified:\n- src/MAVLinkManager.cpp: GPS altitude noise model\n- config/px4_params/*: EKF2_GPS_P_NOISE updates for all aircraft\n- src/ConnectionStatusHUD.cpp: New HUD implementation\n- include/ConnectionStatusHUD.h: HUD interface\n- src/px4xplane.cpp: HUD integration\n- config/config.ini: Debug flags disabled, HUD enabled\n\nAircraft Configurations Updated:\n- Alia250, eHang184, Cessna172, TB2, QTailsitter\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(wsl ls -la docs/)",
      "Bash(git commit -m \"$(cat <<''EOF''\nRelease v2.5.2: Unified cross-platform build system with CMake\n\n## New Features\n\n### Unified Build System\n- **CMakeLists.txt**: Modern cross-platform CMake configuration\n  - Supports Windows (MSVC/MinGW), Linux (GCC/Clang), macOS (Clang)\n  - Auto-detects platform and configures correctly\n  - IDE integration: VS Code, CLion, Xcode, Visual Studio\n  - Single build command works everywhere: `cmake .. && cmake --build .`\n\n- **Makefile.linux**: Native Linux builds\n  - Direct GCC/Clang support without CMake dependency\n  - Optimized for Linux development workflow\n  - Output: `build/linux/release/px4xplane/64/lin.xpl`\n\n- **Makefile.macos**: Native macOS builds\n  - Universal Binary support (Intel x86_64 + Apple Silicon ARM64)\n  - Framework-based X-Plane SDK linking\n  - Code signing support for distribution\n  - Output: `build/macos/release/px4xplane/64/mac.xpl`\n\n### Documentation\n\n- **BUILD_SYSTEM.md**: Comprehensive build system overview\n  - Platform-specific compiler/linker details\n  - Build method comparisons\n  - Performance tips and best practices\n\n- **docs/BUILD.md**: Updated with CMake instructions\n  - Step-by-step guides for all platforms\n  - Prerequisites and troubleshooting\n  - IDE integration tutorials\n  - Advanced build options\n\n- **README.md**: Added \"Building from Source\" section\n  - Quick build guide for all platforms\n  - Links to detailed documentation\n\n### Version & Project Updates\n\n- Version bumped to **2.5.2**\n- Fixed naming confusion: Project is **px4xplane** (not PixEagle)\n- Updated VersionInfo.h: v2.5.2 Build 031 (Stable)\n- Enhanced .gitignore for CMake artifacts\n\n## Technical Details\n\n### Build Output Structure (Unified)\nAll build methods produce:\n```\npx4xplane/\nâ”œâ”€â”€ 64/\nâ”‚   â””â”€â”€ {platform}.xpl    # win.xpl, lin.xpl, or mac.xpl\nâ”œâ”€â”€ config.ini\nâ””â”€â”€ README.md\n```\n\n### Platform Support\n- **Windows**: Visual Studio 2019/2022, MinGW\n- **Linux**: Ubuntu 18.04+, Fedora, Arch, CentOS 7+\n- **macOS**: 10.14+ with Universal Binary (Intel + Apple Silicon)\n\n### Files Modified\n- CMakeLists.txt (new)\n- Makefile.linux (new)\n- Makefile.macos (new)\n- BUILD_SYSTEM.md (new)\n- docs/BUILD.md (updated)\n- README.md (updated with build section)\n- include/VersionInfo.h (v2.5.2)\n- .gitignore (CMake artifacts)\n\n### Files Removed\n- Old Makefile (replaced by platform-specific versions)\n- Makefile.windows (replaced by CMake + Visual Studio)\n\n## Benefits for Developers\n\nâœ… **Easy for contributors**: Single `cmake` command works everywhere\nâœ… **Professional workflow**: Industry-standard CMake\nâœ… **Native builds**: Platform-specific Makefiles for purists\nâœ… **IDE support**: VS Code, CLion, Xcode integration\nâœ… **Portable**: No hardcoded paths, works out-of-the-box\n\n## Backward Compatibility\n\nVisual Studio project files (`px4-xplane.sln`) remain fully functional for Windows developers who prefer IDE workflow.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(wsl ls:*)",
      "Bash(git commit:*)"
    ],
    "deny": [],
    "ask": []
  }
}
